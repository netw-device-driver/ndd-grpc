/*
Copyright 2020 Wim Henderickx.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/
syntax = "proto3";

package config;
option go_package = "github.com/netw-device-driver/ndd-grpc/config/configpb";

service Configuration {
    rpc Create (Request) returns (Reply) {}
    rpc Get (ResourceKey) returns (Status) {}
    rpc Update (Request) returns (Reply) {}
    rpc Delete (ResourceKey) returns (Reply) {}
  }

message Request {
    string name = 1;
    int32 level = 2;
    Path path = 3;
    bytes data = 5;
    }

message ResourceKey {
    string name = 1;
    int32 level = 2;
}

message Reply {
}

message Status {
    enum ResourceStatus {
      None = 0;
      Success = 1;
      Failed = 2;
      CreatePending = 3;
      UpdatePending = 4;
      DeletePending = 5;
    }
    string name = 1;
    int32 level = 2;
    Path path = 3;
    bytes data = 4;
    ResourceStatus status = 5;
    repeated Deviation deviation = 6;
}

message Deviation {
  Path path = 1;
  string value = 2;
}

// Path encodes a data tree path as a series of repeated strings, with
// each element of the path representing a data tree node name and the
// associated attributes.
// Reference: gNMI Specification Section 2.2.2.
message Path {
    repeated PathElem elem = 3;         // Elements of the path.
  }

// PathElem encodes an element of a path, along with any attributes (keys)
// that may be associated with it.
message PathElem {
    string name = 1;                    // The name of the element in the path.
    map<string, string> key = 2;        // Map of key (attribute) name to value.
  }